#!/bin/bash
# NATH
#Installer-v.01
echo -e "#########################################"
echo -e "#                                       #"
echo -e "#    Script Installation Starting...... #"
echo -e "# Press Ctrl + C if you want to cancel. #"
echo -e "#                                       #"
echo -e "#            NATH Installer             #"
echo -e "#                                       #"
echo -e "#########################################"
sleep 5

#Script Name
ScriptName='Nath'

#SSH ports
ssh_port1='22'
ssh_port2='132'

#Dropbear ports
drop_1='666'
drop_2='777'

#Stunnel ports
stun_1='142'
stun_2='143'

#Openvpn port
ovpn_port='210'

#Openvpn download_port
ovpn_dl='86'

#Privoxy port
privoxy_port='32754'

#Set Local time
vps_time='Asia/Manila'


#Start

#Disable IPV6
echo 1 > /proc/sys/net/ipv6/conf/all/disable_ipv6

#update && upgrade
apt-get update
apt-get upgrade -y

#Install essentials
apt-get install nano wget curl zip unzip tar gzip p7zip-full bc rc openssl cron net-tools dnsutils dos2unix screen bzip2 ccrypt -y
 
#Install needed services
apt-get install dropbear stunnel4 privoxy ca-certificates nginx ruby apt-transport-https lsb-release squid screenfetch -y

#Required package for webmin
apt-get install perl libnet-ssleay-perl openssl libauthen-pam-perl libpam-runtime libio-pty-perl apt-show-versions python dbus libxml-parser-perl -y
apt-get install shared-mime-info jq -y

#Text color
gem install lolcat

#Remove unwanted packages
apt-get autoremove -y

#Install OVPN
echo "deb http://build.openvpn.net/debian/openvpn/stable $(lsb_release -sc) main" >/etc/apt/sources.list.d/openvpn.list && apt-key del E158C569 && wget -O - https://swupdate.openvpn.net/repos/repo-public.gpg | apt-key add -
wget -qO security-openvpn-net.asc "https://keys.openpgp.org/vks/v1/by-fingerprint/F554A3687412CFFEBDEFE0A312F5F7B42F2B01E7" && gpg --import security-openvpn-net.asc
apt-get update -y
apt-get install openvpn -y

function InsOpenVPN(){
#Checking deleted openvpn files
 if [[ ! -e /etc/openvpn ]]; then
  mkdir -p /etc/openvpn
 fi

#Removing all existing openvpn server files
rm -rf /etc/openvpn/*

# Creating server.conf, ca.crt, server.crt and server.key
cat <<'client' > /etc/openvpn/server_tcp.conf
#NATH
port MyOvpnPort1
dev tun
proto tcp
ca /etc/openvpn/ca.crt
cert /etc/openvpn/nath.crt
key /etc/openvpn/nath.key
duplicate-cn
dh none
persist-tun
persist-key
persist-remote-ip
cipher none
ncp-disable
auth none
comp-lzo
tun-mtu 1500
reneg-sec 0
plugin /etc/openvpn/openvpn-auth-pam.so /etc/pam.d/login
verify-client-cert none
username-as-common-name
max-clients 4000
topology subnet
server 172.16.0.0 255.255.0.0
push "redirect-gateway def1"
keepalive 5 60
status /etc/openvpn/tcp_stats.log
log /etc/openvpn/tcp.log
verb 2
script-security 2
socket-flags TCP_NODELAY
push "socket-flags TCP_NODELAY"
push "dhcp-option DNS 1.0.0.1"
push "dhcp-option DNS 1.1.1.1"
push "dhcp-option DNS 8.8.4.4"
push "dhcp-option DNS 8.8.8.8"
client

cat <<'EOF7'> /etc/openvpn/ca.crt
-----BEGIN CERTIFICATE-----
MIID0jCCAzugAwIBAgIJALnVZsGmA5VVMA0GCSqGSIb3DQEBCwUAMIGeMQswCQYD
VQQGEwJQSDEOMAwGA1UECAwFQklLT0wxDTALBgNVBAcMBE5hZ2ExFDASBgNVBAoM
C1NjcmlwdEJhcnRzMSQwIgYDVQQLDBtodHRwczovL2dpdGh1Yi5jb20vQmFydHMt
MjMxETAPBgNVBAMMCElBTUJBUlRYMSEwHwYJKoZIhvcNAQkBFhJpYW1iYXJ0eEBn
bWFpbC5jb20wHhcNMjAwODE5MTUzNDM3WhcNNDgwMTA0MTUzNDM3WjCBnjELMAkG
A1UEBhMCUEgxDjAMBgNVBAgMBUJJS09MMQ0wCwYDVQQHDAROYWdhMRQwEgYDVQQK
DAtTY3JpcHRCYXJ0czEkMCIGA1UECwwbaHR0cHM6Ly9naXRodWIuY29tL0JhcnRz
LTIzMREwDwYDVQQDDAhJQU1CQVJUWDEhMB8GCSqGSIb3DQEJARYSaWFtYmFydHhA
Z21haWwuY29tMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDbIUbQYcSduz0B
HdaLDGUxByjbdS7R8RQBUmsGbdhZFDSAsqlesgDPfkWO3lUHlUxVf5z3S/aJIvpk
dUeG80p0bHgqJBbkaJWdZzlqS47WPr5N9mkzx7ZxOel5zLTsXGL316SbqKuSXP9K
8FysbxNUOqQw+0PcRR9qRGWFU/d1jQIDAQABo4IBFDCCARAwHQYDVR0OBBYEFKfS
tTje+kKpL1hc2Dt2RaV1yeklMIHTBgNVHSMEgcswgciAFKfStTje+kKpL1hc2Dt2
RaV1yekloYGkpIGhMIGeMQswCQYDVQQGEwJQSDEOMAwGA1UECAwFQklLT0wxDTAL
BgNVBAcMBE5hZ2ExFDASBgNVBAoMC1NjcmlwdEJhcnRzMSQwIgYDVQQLDBtodHRw
czovL2dpdGh1Yi5jb20vQmFydHMtMjMxETAPBgNVBAMMCElBTUJBUlRYMSEwHwYJ
KoZIhvcNAQkBFhJpYW1iYXJ0eEBnbWFpbC5jb22CCQC51WbBpgOVVTAMBgNVHRME
BTADAQH/MAsGA1UdDwQEAwIBBjANBgkqhkiG9w0BAQsFAAOBgQBwdEQ1WxL+CFnu
TXpxBDxCAdVt0wx/BajZoUTFQNx+ayLvbMZG/u39blTYlZZ/Q2VRFw6wa+VRviDk
qLaAs4jTq/IhomRM5eEZRvcCx7sgs5zu3ggD6HFZqrlrTS7XKxBgASkuJtT/DiT8
u37RrsJDD4VPMq8d+Jc0HqPwdatkKg==
-----END CERTIFICATE-----
EOF7

cat <<'EOF9'> /etc/openvpn/nath.crt
Certificate:
    Data:
        Version: 3 (0x2)
        Serial Number:
            77:4a:a5:72:b1:bf:cb:e3:9e:77:75:7d:02:96:eb:e3
    Signature Algorithm: sha256WithRSAEncryption
        Issuer: C=PH, ST=MNL, L=VAL, O=TATA, OU=TATA.ME, CN=TATA/emailAddress=nokyaselpon@gmail.com
        Validity
            Not Before: Aug 19 15:34:54 2020 GMT
            Not After : Jan  4 15:34:54 2048 GMT
        Subject: C=PH, ST=MNL, L=VAL, O=TATA, OU=TATA.ME, CN=TATA/emailAddress=nokyaselpon@gmail.com
        Subject Public Key Info:
            Public Key Algorithm: rsaEncryption
                Public-Key: (1024 bit)
                Modulus:
                    00:a7:b4:a7:d4:25:46:3d:0c:f0:55:9b:32:cb:8b:
                    92:e2:d6:d4:d8:09:c2:60:14:30:1b:27:95:76:87:
                    4e:9e:3e:b1:0c:c9:98:02:77:a1:ec:e8:c3:92:6d:
                    b4:e9:86:19:76:35:71:7d:2b:91:70:c0:9b:f3:b7:
                    30:1a:53:12:e0:d8:5e:7b:0c:65:f0:60:36:22:d3:
                    9e:49:ff:2a:74:04:33:ba:f7:a2:98:02:f4:1f:2c:
                    32:d3:c1:be:af:f1:8a:8b:72:fb:7e:8f:4d:73:30:
                    d3:3b:d3:79:77:14:96:37:e4:45:82:6f:a3:3a:05:
                    a1:db:78:13:d5:f0:31:51:89
                Exponent: 65537 (0x10001)
        X509v3 extensions:
            X509v3 Basic Constraints: 
                CA:FALSE
            X509v3 Subject Key Identifier: 
                9C:3B:FA:35:9F:A8:21:33:97:83:2F:E4:82:85:39:7E:B6:36:8B:72
            X509v3 Authority Key Identifier: 
                keyid:A7:D2:B5:38:DE:FA:42:A9:2F:58:5C:D8:3B:76:45:A5:75:C9:E9:25
                DirName:/C=PH/ST=MNL/L=VAL/O=TATA/OU=TATA.ME/CN=TATA/emailAddress=nokyaselpon@gmail.com
                serial:B9:D5:66:C1:A6:03:95:55
            X509v3 Extended Key Usage: 
                TLS Web Server Authentication
            X509v3 Key Usage: 
                Digital Signature, Key Encipherment
            X509v3 Subject Alternative Name: 
                DNS:server
    Signature Algorithm: sha256WithRSAEncryption
         12:ba:a0:bc:95:0f:29:95:84:48:7c:01:ee:04:e1:8c:57:1b:
         08:8d:08:0e:cd:14:f0:5a:50:59:13:f9:04:64:d0:37:96:b0:
         1d:b7:7f:62:2f:03:78:12:1a:ec:93:bd:9c:0b:15:b8:71:c7:
         2d:75:50:56:3f:13:94:22:0a:e3:de:e3:a1:1e:33:49:e4:76:
         d6:91:ad:e7:10:72:80:c8:38:67:70:90:cb:b7:21:49:32:a3:
         fc:95:ef:d7:0d:97:87:cc:40:72:d5:42:1f:d9:9c:a7:ba:8b:
         5e:f9:69:4f:3d:c6:da:6c:e1:8d:96:cc:ad:66:50:f3:5c:db:
         74:fd
-----BEGIN CERTIFICATE-----
MIID/DCCA2WgAwIBAgIQd0qlcrG/y+Oed3V9Apbr4zANBgkqhkiG9w0BAQsFADCB
njELMAkGA1UEBhMCUEgxDjAMBgNVBAgMBUJJS09MMQ0wCwYDVQQHDAROYWdhMRQw
EgYDVQQKDAtTY3JpcHRCYXJ0czEkMCIGA1UECwwbaHR0cHM6Ly9naXRodWIuY29t
L0JhcnRzLTIzMREwDwYDVQQDDAhJQU1CQVJUWDEhMB8GCSqGSIb3DQEJARYSaWFt
YmFydHhAZ21haWwuY29tMB4XDTIwMDgxOTE1MzQ1NFoXDTQ4MDEwNDE1MzQ1NFow
gZwxCzAJBgNVBAYTAlBIMQ4wDAYDVQQIDAVCSUtPTDENMAsGA1UEBwwETmFnYTEU
MBIGA1UECgwLU2NyaXB0QmFydHMxJDAiBgNVBAsMG2h0dHBzOi8vZ2l0aHViLmNv
bS9CYXJ0cy0yMzEPMA0GA1UEAwwGc2VydmVyMSEwHwYJKoZIhvcNAQkBFhJpYW1i
YXJ0eEBnbWFpbC5jb20wgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAKe0p9Ql
Rj0M8FWbMsuLkuLW1NgJwmAUMBsnlXaHTp4+sQzJmAJ3oezow5JttOmGGXY1cX0r
kXDAm/O3MBpTEuDYXnsMZfBgNiLTnkn/KnQEM7r3opgC9B8sMtPBvq/xioty+36P
TXMw0zvTeXcUljfkRYJvozoFodt4E9XwMVGJAgMBAAGjggE5MIIBNTAJBgNVHRME
AjAAMB0GA1UdDgQWBBScO/o1n6ghM5eDL+SChTl+tjaLcjCB0wYDVR0jBIHLMIHI
gBSn0rU43vpCqS9YXNg7dkWldcnpJaGBpKSBoTCBnjELMAkGA1UEBhMCUEgxDjAM
BgNVBAgMBUJJS09MMQ0wCwYDVQQHDAROYWdhMRQwEgYDVQQKDAtTY3JpcHRCYXJ0
czEkMCIGA1UECwwbaHR0cHM6Ly9naXRodWIuY29tL0JhcnRzLTIzMREwDwYDVQQD
DAhJQU1CQVJUWDEhMB8GCSqGSIb3DQEJARYSaWFtYmFydHhAZ21haWwuY29tggkA
udVmwaYDlVUwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0PBAQDAgWgMBEGA1Ud
EQQKMAiCBnNlcnZlcjANBgkqhkiG9w0BAQsFAAOBgQASuqC8lQ8plYRIfAHuBOGM
VxsIjQgOzRTwWlBZE/kEZNA3lrAdt39iLwN4Ehrsk72cCxW4ccctdVBWPxOUIgrj
3uOhHjNJ5HbWka3nEHKAyDhncJDLtyFJMqP8le/XDZeHzEBy1UIf2Zynuote+WlP
PcbabOGNlsytZlDzXNt0/Q==
-----END CERTIFICATE-----
EOF9

 cat <<'EOF10'> /etc/openvpn/nath.key
-----BEGIN PRIVATE KEY-----
MIICdwIBADANBgkqhkiG9w0BAQEFAASCAmEwggJdAgEAAoGBAKe0p9QlRj0M8FWb
MsuLkuLW1NgJwmAUMBsnlXaHTp4+sQzJmAJ3oezow5JttOmGGXY1cX0rkXDAm/O3
MBpTEuDYXnsMZfBgNiLTnkn/KnQEM7r3opgC9B8sMtPBvq/xioty+36PTXMw0zvT
eXcUljfkRYJvozoFodt4E9XwMVGJAgMBAAECgYBiMSBi0kBB1qWROgGPs/UY4/hT
VcN9RdS00YRtleOuO76mYhKivzEL6W04+wsGAAJAeCIuy6eogN3O4N9FSoauNNq+
Om95WGLY+OWE9H61Y+UioafqMRN6CFiSvy1a0inOclunBljcf68uZIkeKgTPoc0v
osNfuCas7LfO48XPkQJBANFoKHsAqdYvbF+/RZqVfd5sqXMUPNCww9YeQsGz3mBp
yp+Tx7T+wGUKGKZzD9fqwN2+z0kP1QYtkCSF4pRL4ZMCQQDNBTFc0AWBietYonsN
ewllx+D72k5Tt2TdSBOhYsoZFu28ybkiagGLDBsQsAdpsjSc7HiaBsuiyLjS16kK
eOHzAkEAmnLZUIeXvFrz8tavbqmN0YyRmkg15rJJbtaY5CdXAANnKDWmGU+/9YXx
0mqRJ+6EW8jNOBUOSGU4qEd7a2dgMwJABUyjEAEYg1arTKk2gQyzG3xlJl1oNOXC
p62bREqnaqqbDowwSuFulMeFU5MZPfQrQ/sgyupuDREfJeQJLIofXQJBAKpVRR0G
JFriv/ukvYSEiw4bgneXbKtTjvXVE5B518RSPaaLEdz7agCJZ3yGWt8Hw3L1GEHE
1Z9t3f/rftuj+4U=
-----END PRIVATE KEY-----
EOF10

#Set ovpn port
 sed -i "s|ClientOVPN|$ovpn_port|g" /etc/openvpn/server_tcp.conf
 
# Generating openvpn dh.pem file using openssl
#openssl dhparam -out /etc/openvpn/dh.pem 1024

#Ovpn plugins
wget -qO /etc/openvpn/b.zip 'https://github.com/nokyaselpon/TATA/raw/main/openvpn_plugin64'
unzip -qq /etc/openvpn/b.zip -d /etc/openvpn
rm -f /etc/openvpn/b.zip

#Openvpn startup "error" fix
if [[ "$(hostnamectl | grep -i Virtualization | awk '{print $2}' | head -n1)" == 'openvz' ]]; then
sed -i 's|LimitNPROC|#LimitNPROC|g' /lib/systemd/system/openvpn*
systemctl daemon-reload
fi

#IPv4 Forwarding
echo 'net.ipv4.ip_forward=1' > /etc/sysctl.d/20-openvpn.conf && sysctl --system &> /dev/null && echo 1 > /proc/sys/net/ipv4/ip_forward

#OPENVPN iptables "Uncomment if needed"
#PUBLIC_INET="$(ip -4 route ls | grep default | grep -Po '(?<=dev )(\S+)' | head -1)"
#IPCIDR='10.200.0.0/16'
#iptables -I FORWARD -s $IPCIDR -j ACCEPT
#iptables -t nat -A POSTROUTING -o $PUBLIC_INET -j MASQUERADE
#iptables -t nat -A POSTROUTING -s $IPCIDR -o $PUBLIC_INET -j MASQUERADE

#Installing Firewalld
apt install firewalld -y
systemctl start firewalld
systemctl enable firewalld
firewall-cmd --quiet --set-default-zone=public
firewall-cmd --quiet --zone=public --permanent --add-port=1-65534/tcp
firewall-cmd --quiet --zone=public --permanent --add-port=1-65534/udp
firewall-cmd --quiet --reload
firewall-cmd --quiet --add-masquerade
firewall-cmd --quiet --permanent --add-masquerade
firewall-cmd --quiet --permanent --add-service=ssh
firewall-cmd --quiet --permanent --add-service=openvpn
firewall-cmd --quiet --permanent --add-service=http
firewall-cmd --quiet --permanent --add-service=https
firewall-cmd --quiet --permanent --add-service=privoxy
firewall-cmd --quiet --permanent --add-service=squid
firewall-cmd --quiet --reload
 
#Enable IPv4 Forwarding
echo 1 > /proc/sys/net/ipv4/ip_forward

#Starting OpenVPN server
systemctl start openvpn@server_tcp
systemctl enable openvpn@server_tcp
systemctl restart openvpn@server_tcp
}


#Setting SSH config

function InsSSHnDROP(){
#Remove duplicate files
rm -f /etc/ssh/sshd_config*

#Creating SSH config
cat <<'SSH' > /etc/ssh/sshd_config
#My OpenSSH Server config
Port sshp1
Port sshp2
AddressFamily inet
ListenAddress 0.0.0.0
HostKey /etc/ssh/ssh_host_rsa_key
HostKey /etc/ssh/ssh_host_ecdsa_key
HostKey /etc/ssh/ssh_host_ed25519_key
PermitRootLogin yes
MaxSessions 1024
PubkeyAuthentication yes
PasswordAuthentication yes
PermitEmptyPasswords no
ChallengeResponseAuthentication no
UsePAM yes
X11Forwarding yes
PrintMotd no
ClientAliveInterval 240
ClientAliveCountMax 2
UseDNS no
Banner /etc/banner
AcceptEnv LANG LC_*
Subsystem   sftp  /usr/lib/openssh/sftp-server
SSH

#Change ssh ports
sed -i "s|sshp1|$ssh_port1|g" /etc/ssh/sshd_config
sed -i "s|sshp2|$ssh_port2|g" /etc/ssh/sshd_config
service ssh restart

#Installing Dropbear
#Remove dropbear duplicate
rm -rf /etc/default/dropbear*

#Create dropbear config

cat <<'Dropbear' > /etc/default/dropbear
# My Dropbear Config
NO_START=0
DROPBEAR_PORT=portone
DROPBEAR_EXTRA_ARGS="-p porttwo"
DROPBEAR_BANNER="/etc/banner"
DROPBEAR_RSAKEY="/etc/dropbear/dropbear_rsa_host_key"
DROPBEAR_DSSKEY="/etc/dropbear/dropbear_dss_host_key"
DROPBEAR_ECDSAKEY="/etc/dropbear/dropbear_ecdsa_host_key"
DROPBEAR_RECEIVE_WINDOW=65536
Dropbear

#Change dropbear ports
sed -i "s|portone|$drop_1|g" /etc/default/dropbear
sed -i "s|porttwo|$drop_2|g" /etc/default/dropbear
systemctl restart dropbear
}

#Installing squid
#Removing duplicated files
apt remove --purge squid -y
rm -rf /etc/squid/sq*
apt install squid -y

function InsProxies(){
#Setting Squid Conf
sqd_port1='8000'
sqd_port2='8700'
sqd_port3='1128'
cat <<SQD > /etc/squid/squid.conf
acl VPN dst $(wget -4qO- http://ipinfo.io/ip)/32
http_access allow VPN
http_access deny all 
http_port 0.0.0.0:$sqd_port1
http_port 0.0.0.0:$sqd_port2
http_port 0.0.0.0:$sqd_port3
coredump_dir /var/spool/squid
dns_nameservers 1.1.1.1 1.0.0.1
refresh_pattern ^ftp: 1440 20% 10080
refresh_pattern ^gopher: 1440 0% 1440
refresh_pattern -i (/cgi-bin/|\?) 0 0% 0
refresh_pattern . 0 20% 4320
visible_hostname localhost
SQD

service squid restart

#Installing Privoxy

#Remove Duplicate files
rm -rf /etc/privoxy/config*
 
#Creating Privoxy Config
cat <<'Privoxy' > /etc/privoxy/config
# My Privoxy Server Config
user-manual /usr/share/doc/privoxy/user-manual
confdir /etc/privoxy
logdir /var/log/privoxy
filterfile default.filter
logfile logfile
listen-address 0.0.0.0:privoxy_p1
toggle 1
enable-remote-toggle 0
enable-remote-http-toggle 0
enable-edit-actions 0
enforce-blocks 0
buffer-limit 4096
enable-proxy-authentication-forwarding 1
forwarded-connect-retries 1
accept-intercepted-requests 1
allow-cgi-request-crunching 1
split-large-forms 0
keep-alive-timeout 5
tolerate-pipelining 1
socket-timeout 300
permit-access 0.0.0.0/0 IP-ADDRESS
Privoxy

#Permit access only this machine can access privoxy
sed -i "s|IP-ADDRESS|$IPADDR|g" /etc/privoxy/config
 
#Setting privoxy ports
sed -i "s|privoxy_p1|$privoxy_port|g" /etc/privoxy/config
service privoxy restart
}

#SSL Install

function InsStunnel(){
StunnelDir=$(ls /etc/default | grep stunnel | head -n1)
#Configuring Stunnel
cat <<'STUN' > /etc/default/$StunnelDir
# My Stunnel Config
ENABLED=1
FILES="/etc/stunnel/*.conf"
OPTIONS=""
BANNER="/etc/banner"
PPP_RESTART=0
#RLIMITS="-n 4096 -d unlimited"
RLIMITS=""
STUN

#Removing Stunnel folder contents
rm -rf /etc/stunnel/*

#Create stunnel cert using openssl
openssl req -new -x509 -days 9999 -nodes -subj "/C=PH/ST=NCR/L=Manila/O=$ScriptName/OU=$ScriptName/CN=$ScriptName" -out /etc/stunnel/stunnel.pem -keyout /etc/stunnel/stunnel.pem &> /dev/null
##  > /dev/null 2>&1

# Creating stunnel config
cat <<'TUNNEL' > /etc/stunnel/stunnel.conf
pid = /var/run/stunnel.pid
cert = /etc/stunnel/stunnel.pem
client = no
socket = l:TCP_NODELAY=1
socket = r:TCP_NODELAY=1
TIMEOUTclose = 0
[dropbear]
accept = stun_p1
connect = 127.0.0.1:dropbear_port_c
[openssh]
accept = stun_p2
connect = 127.0.0.1:openssh_port_c
TUNNEL

#Stunnel ports
sed -i "s|stun_p1|$stun_1|g" /etc/stunnel/stunnel.conf
sed -i "s|dropbear_port_c|$(netstat -tlnp | grep -i dropbear | awk '{print $4}' | cut -d: -f2 | xargs | awk '{print $2}' | head -n1)|g" /etc/stunnel/stunnel.conf
sed -i "s|stun_p2|$stun_2|g" /etc/stunnel/stunnel.conf
sed -i "s|openssh_port_c|$(netstat -tlnp | grep -i ssh | awk '{print $4}' | cut -d: -f2 | xargs | awk '{print $2}' | head -n1)|g" /etc/stunnel/stunnel.conf
systemctl restart $StunnelDir
service stunnel restart
}

#WebMin

function InstWebmin(){
#Download the webmin .deb package
WebminFile='http://prdownloads.sourceforge.net/webadmin/webmin_1.910_all.deb'
wget -qO webmin.deb "$WebminFile"
 
#Installing .deb package for webmin
dpkg --install webmin.deb
 
rm -rf webmin.deb
 
#Configuring webmin server config to use only http instead of https
sed -i 's|ssl=1|ssl=0|g' /etc/webmin/miniserv.conf
 
#Then restart to take effect
systemctl restart webmin
}

#OVPN DL
function OvpnConfigs(){
#Creating nginx config for our ovpn config downloads webserver
cat <<'NGINX' > /etc/nginx/conf.d/nath-ovpn-config.conf
#OpenVPN Config Download Directory
server {
listen 0.0.0.0:nginks;
server_name localhost;
root /var/www/openvpn;
index index.html;
}
NGINX


#Setting our nginx config port for .ovpn download site
sed -i "s|nginks|$ovpn_dl|g" /etc/nginx/conf.d/nath-ovpn-config.conf

#Removing Default nginx page(port 80)
rm -rf /etc/nginx/sites-*

#Creating our root directory for all of our .ovpn configs
rm -rf /var/www/openvpn
mkdir -p /var/www/openvpn

#Now creating all of our OpenVPN Configs 

cat <<EOF152> /var/www/openvpn/GTMConf.ovpn
#NATH
client
dev tun
proto tcp
remote $IPADDR $ovpn_port
remote-cert-tls server
resolv-retry infinite
nobind
tun-mtu 1500
tun-mtu-extra 32
mssfix 1450
persist-key
persist-tun
auth-user-pass
auth none
auth-nocache
cipher none
keysize 0
comp-lzo
setenv CLIENT_CERT 0
reneg-sec 0
verb 1
http-proxy $(curl -s http://ipinfo.io/ip || wget -q http://ipinfo.io/ip) $sqd_p1
http-proxy-option VERSION 1.1
http-proxy-option AGENT Chrome/80.0.3987.87
http-proxy-option CUSTOM-HEADER Host googleapis.google-analytics.com
http-proxy-option CUSTOM-HEADER X-Forward-Host googleapis.google-analytics.com
http-proxy-option CUSTOM-HEADER X-Forwarded-For googleapis.google-analytics.com
http-proxy-option CUSTOM-HEADER Referrer googleapis.google-analytics.com
http-proxy-retry
<ca>
$(cat /etc/openvpn/ca.crt)
</ca>
EOF152

#Creating OVPN download site index.html
cat <<'OVPN' > /var/www/openvpn/index.html
<!DOCTYPE html>
<html lang="en">
<!-- NATH OVPN -->

<head><meta charset="utf-8" /><title>MyScriptName OVPN Config Download</title><meta name="description" content="MyScriptName Server" /><meta content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" name="viewport" /><meta name="theme-color" content="#000000" /><link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.8.2/css/all.css"><link href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.3.1/css/bootstrap.min.css" rel="stylesheet"><link href="https://cdnjs.cloudflare.com/ajax/libs/mdbootstrap/4.8.3/css/mdb.min.css" rel="stylesheet"></head><body><div class="container justify-content-center" style="margin-top:9em;margin-bottom:5em;"><div class="col-md"><div class="view"><img src="https://openvpn.net/wp-content/uploads/openvpn.jpg" class="card-img-top"><div class="mask rgba-white-slight"></div></div><div class="card"><div class="card-body"><h5 class="card-title">Config List</h5><br /><ul class="list-group"><li class="list-group-item justify-content-between align-items-center" style="margin-bottom:1em;"><p>For Globe/TM <span class="badge light-blue darken-4">Android/iOS</span><br /><small> For EZ/GS Promo with WNP freebies</small></p><a class="btn btn-outline-success waves-effect btn-sm" href="http://IP-ADDRESS:NGINXPORT/GTMConf.ovpn" style="float:right;"><i class="fa fa-download"></i> Download</a></li><li class="list-group-item justify-content-between align-items-center" style="margin-bottom:1em;"><p>For Sun <span class="badge light-blue darken-4">Android/iOS/PC/Modem</span><br /><small> For TU/CTC UDP Promos</small></p><a class="btn btn-outline-success waves-effect btn-sm" href="http://IP-ADDRESS:NGINXPORT/SunConfig.ovpn" style="float:right;"><i class="fa fa-download"></i> Download</a></li><li class="list-group-item justify-content-between align-items-center" style="margin-bottom:1em;"><p>For Sun <span class="badge light-blue darken-4">Android/iOS/PC/MODEM</span><br /><small> TNT GIGASTORIES</small></p><a class="btn btn-outline-success waves-effect btn-sm" href="http://IP-ADDRESS:NGINXPORT/GStories.ovpn" style="float:right;"><i class="fa fa-download"></i> Download</a></li></ul></div></div></div></div></body></html>
OVPN

# Setting template's correct name,IP address and nginx Port
sed -i "s|MyScriptName|$SriptName|g" /var/www/openvpn/index.html
sed -i "s|NGINXPORT|$ovpn_dl|g" /var/www/openvpn/index.html
sed -i "s|IP-ADDRESS|$IPADDR|g" /var/www/openvpn/index.html
systemctl restart nginx

#Creating ovpn.config
cd /var/www/openvpn
zip -qq -r Configs.zip *.ovpn
cd
}

function ip_address(){

 local IP="$( ip addr | egrep -o '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | egrep -v "^192\.168|^172\.1[6-9]\.|^172\.2[0-9]\.|^172\.3[0-2]\.|^10\.|^127\.|^255\.|^0\." | head -n 1 )"
 [ -z "${IP}" ] && IP="$( wget -qO- -t1 -T2 ipv4.icanhazip.com )"
 [ -z "${IP}" ] && IP="$( wget -qO- -t1 -T2 ipinfo.io/ip )"
  [ ! -z "${IP}" ] && echo "${IP}" || echo
} 

IPADDR="$(ip_address)"

function ConfStartup(){
#Cron
echo -e "0 0 * * * /sbin/reboot >/dev/null 2>&1" >> /etc/cron.d/mdadm
#Creating directory for startup script
rm -rf /etc/tata
mkdir -p /etc/tata
chmod -R 755 /etc/tata
 
 # Creating startup script using cat eof tricks
 cat <<'EOFSH' > /etc/tata/startup.sh
#!/bin/bash
# Setting server local time
ln -fs /usr/share/zoneinfo/MyVPS_Time /etc/localtime
# Prevent DOS-like UI when installing using APT (Disabling APT interactive dialog)
export DEBIAN_FRONTEND=noninteractive
# Allowing ALL TCP ports for our machine (Simple workaround for policy-based VPS)
iptables -A INPUT -s $(wget -4qO- http://ipinfo.io/ip) -p tcp -m multiport --dport 1:65535 -j ACCEPT
# Allowing OpenVPN to Forward traffic
/bin/bash /etc/openvpn/openvpn.bash
# Deleting Expired SSH Accounts
/usr/local/sbin/delete_expired &> /dev/null
EOFSH
 chmod +x /etc/tata/startup.sh
 
 # Setting server local time every time this machine reboots
 sed -i "s|MyVPS_Time|$MyVPS_Time|g" /etc/tata/startup.sh
 # 
 rm -rf /etc/sysctl.d/99*
 # Setting our startup script to run every machine boots 
 echo "[Unit]
Description=NATH Startup Script
Before=network-online.target
Wants=network-online.target
[Service]
Type=oneshot
ExecStart=/bin/bash /etc/tata/startup.sh
RemainAfterExit=yes
[Install]
WantedBy=multi-user.target" > /etc/systemd/system/tata.service
chmod +x /etc/systemd/system/tata.service
systemctl daemon-reload
systemctl start tata
systemctl enable tata &> /dev/null
#Rebooting cron service
systemctl restart cron
systemctl enable cron

}

function menuConf(){
echo -e " Creating Menu scripts.."
cd /usr/local/sbin/
rm -rf {accounts,base-ports,base-ports-wc,base-script,bench-network,clearcache,connections,create,create_random,create_trial,delete_expired,diagnose,edit_dropbear,edit_openssh,edit_openvpn,edit_ports,edit_squid3,edit_stunnel4,locked_list,menu,options,ram,reboot_sys,reboot_sys_auto,restart_services,server,set_multilogin_autokill,set_multilogin_autokill_lib,show_ports,speedtest,user_delete,user_details,user_details_lib,user_extend,user_list,user_lock,user_unlock}
wget -q 'https://github.com/nokyaselpon/TATA/raw/main/menu.zip'
unzip -qq menu.zip
rm -f menu.zip
chmod +x ./*
dos2unix ./* &> /dev/null
sed -i 's|/etc/squid/squid.conf|/etc/privoxy/config|g' ./*
sed -i 's|http_port|listen-address|g' ./*
cd ~
echo 'clear' > /etc/profile.d/tata.sh
echo 'echo '' > /var/log/syslog' >> /etc/profile.d/tata.sh
echo 'screenfetch -p -A Android' >> /etc/profile.d/tata.sh
chmod +x /etc/profile.d/tata.sh
}

function ScriptMessage(){
 echo -e " (｡◕‿◕｡) $ScriptName Ubuntu VPS Installer"
 echo -e ""
 echo -e ""
 echo -e " NATH UBUNTU"
}

#Set Local Time
ln -fs /usr/share/zoneinfo/$vps_time /etc/localtime

#Start
ScriptMessage
sleep 2

#Configure SSH and Dropbear
echo -e "Initiating..."
InsSSHnDROP

#Configure OpenVPN
echo -e "Initiating..."
InsOpenVPN

# Configure Stunnel
echo -e "Initiating..."
InsStunnel

#Configure Proxies
echo -e "Initiating..."
InsProxies

#Configure Webmin
echo -e "Initiating..."
InstWebmin

#Configure ovpn download site
OvpnConfigs

#Configure startup
ConfStartup

#Configure Menu
ConfMenu

clear
cd ~

#Setting up banner
rm /etc/issue.net
wget -O /etc/issue.net "https://raw.githubusercontent.com/nokyaselpon/MyScript/main/files/issue.net"
sed -i 's@#Banner@Banner@g' /etc/ssh/sshd_config
sed -i 's@DROPBEAR_BANNER=""@DROPBEAR_BANNER="/etc/issue.net"@g' /etc/default/dropbear
service ssh restart
service dropbear restart

#run sysinfo & message
bash /etc/profile.d/tata.sh
ScriptMessage

#Finishing Installation
 echo -e ""
 echo -e " Success Installation"
 echo -e ""
 echo -e " Service Ports: "
 echo -e " OpenSSH: $ssh_port1, $ssh_port2"
 echo -e " Stunnel: $stun_1, $stun_2"
 echo -e " DropbearSSH: $drop_1, $drop_2"
 echo -e " Privoxy: $privoxy_port"
 echo -e " Squid: $sqd_port1, $sqd_port2, $sqd_port3"
 echo -e " OpenVPN: $ovpn_port"
 echo -e " NGiNX: $ovpn_dl"
 echo -e " Webmin: 10000"
 echo -e ""
 echo -e ""
 echo -e " OpenVPN Configs Download site"
 echo -e " http://$IPADDR:$ovpn_dl"
 echo -e ""
 echo -e " All OpenVPN Configs Archive"
 echo -e " http://$IPADDR:$ovpn_dl/Configs.zip"
 echo -e ""
 echo -e ""
 #Clear Logs
 rm -rf /root/.bash_history && history -c && echo '' > /var/log/syslog
 exit 1
